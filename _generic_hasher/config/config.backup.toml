[meta]
region="ANY"
version="1.0.0"
signature="0143d416553e847f1cfb72152beb0e37"

[messages]

terms_and_conditions="""
<strong>Common Identifier Application</strong>
<p>
    <i>Copyright (C) 2024 World Food Programme</i>
</p>
<p>
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
    License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any
    later version.
</p>
<p>
    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
    implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
    more details.
</p>
<p>
    You should have received a copy of the GNU General Public License along with this program. If not, see 
    <a href="https://www.gnu.org/licenses" target="_blank">gnu.org</a>.
</p>
"""

error_in_config="""

<p>The application encountered an error whilst attempting to load a configuration file.</p>

<p>Please contact support</p>
"""

error_in_salt="""
<p>The application encountered an error whilst attempting to load your individual salt file.</p>

<p>Please contact support</p>
"""

[source]
columns = [
    { name = "ID",               alias = "id"  },
    { name = "Organization",     alias = "organization" },
    { name = "Category",         alias = "category"     },
    { name = "Currency",         alias = "currency"     },
    { name = "Amount",           alias = "amount"       },
    { name = "Start (yyyyMMdd)", alias = "start"        },
    { name = "End (yyyyMMdd)",   alias = "end"          },
]

[validations]

"*" = [
    { op = "max_field_length", value = 200 },
]

id = [
    { op = "field_type", value = "string" },
    { op = "regex_match", value = '(\d{11})', message="must be 11 numeric digits" }
]

organization = [
    { op = "field_type", value = "string" },
    { op = "min_field_length", value = 2 },
    { op = "max_field_length", value = 10 },
    { op = "same_value_for_all_rows" },
]

category = [
    { op = "field_type", value = "string" },
    { op = "min_field_length", value = 2 },
    { op = "max_field_length", value = 15 },
    { op = "same_value_for_all_rows" },
]

currency = [
    { op = "field_type", value = "string" },
    { op = "regex_match", value = 'SYP', message="must be SYP (Syrian Pounds)" },
    { op = "same_value_for_all_rows" },
]

amount = [
    { op = "min_value", value = 1 },
    { op = "max_value", value = 300_000_000 },
]

start = [
    { op = "regex_match", value = '((?:19|20)\d{2}(?:0[1-9]|1[012])(?:0[1-9]|[12]\d|3[01]))', message="must be in the format of yyyyMMdd, e.g. 20240301" }, # yyyyMMdd
    { op = "date_diff", value = "-12M:+2M", message = "must be within 1 year in the past or 2 months in the future"},
]

end = [
    { op = "regex_match", value = '((?:19|20)\d{2}(?:0[1-9]|1[012])(?:0[1-9]|[12]\d|3[01]))', message="must be in the format of yyyyMMdd, e.g. 20240301"  }, # yyyyMMdd
    { op = "date_field_diff", target = "start", value=":+12M", message="must be within a year of Start"},
]

[algorithm]

[algorithm.columns]
process = []
static = [
    "id",
]
reference = []

[algorithm.hash]
strategy = "SHA256"

[algorithm.salt]
source = "FILE"
validator_regex = "-----BEGIN PGP PUBLIC KEY BLOCK-----[A-Za-z0-9+/=\\s]+-----END PGP PUBLIC KEY BLOCK-----"


[algorithm.salt.value]
win32 = ""
darwin = ""
linux = ""

[destination]
columns = [
    { name = "Common Identifier", alias = "hashed_id" },
    { name = "Organization",      alias = "organization" },
    { name = "Category",          alias = "category" },
    { name = "Currency",          alias = "currency" },
    { name = "Amount",            alias = "amount" },
    { name = "Start (yyyyMMdd)",  alias = "start" },
    { name = "End (yyyyMMdd)",    alias = "end" },
]
postfix = "-OUTPUT-0.0.9-{{yyyy-MM-dd--HH-mm-ss}}"

[destination_map]
columns = [
    { name = "ID",       alias = "id" },
    { name = "Common Identifier", alias = "hashed_id" }
]
postfix = "-MAPPING-0.0.9-{{yyyy-MM-dd--HH-mm-ss}}"

[destination_errors]
columns = [
    { name = "Errors",            alias = "errors" },
    { name = "ID",                alias = "id" },
    { name = "Organization",      alias = "organization" },
    { name = "Category",          alias = "category" },
    { name = "Currency",          alias = "currency" },
    { name = "Amount",            alias = "amount" },
    { name = "Start (yyyyMMdd)",  alias = "start" },
    { name = "End (yyyyMMdd)",    alias = "end" },
]
postfix = "-ERRORS-0.0.9-{{yyyy-MM-dd--HH-mm-ss}}"
